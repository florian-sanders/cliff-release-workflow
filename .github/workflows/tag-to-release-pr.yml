name: Tag to Release PR

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  tag_to_release_pr:
    runs-on: ubuntu-latest
    steps:
      - name: Exit if tag push was by github-actions[bot]
        if: github.actor == 'github-actions[bot]'
        run: |
          echo "Tag push by bot, exiting to avoid cycle."
          exit 0

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Set up git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Prepare next release branch
        id: prepare-next-release-branch
        run: |
          VERSION="${GITHUB_REF_NAME#v}"
          git fetch origin main
          if git ls-remote --exit-code --heads origin prepare-next-release; then
            git checkout prepare-next-release
            git reset --hard origin/main
          else
            git checkout -b prepare-next-release origin/main
          fi
          sed -i 's/^version = "[0-9]\+\.[0-9]\+\.[0-9]\+"/version = "'"$VERSION"'"/' Cargo.toml
          sed -i 's/^version = "[0-9]\+\.[0-9]\+\.[0-9]\+"/version = "'"$VERSION"'"/' extension.toml
          version="$VERSION" >> $GITHUB_OUTPUT

      - name: Get new version and changelog (PR merged)
        if: github.event_name == 'pull_request'
        id: cliff_pr
        uses: orhun/git-cliff-action@v4
        with:
          args: --unreleased --bump
        env:
          GITHUB_REPO: ${{ github.repository }}

      - name: Commit updated files
        run: |
          git add Cargo.toml extension.toml CHANGELOG.md
          git commit -m "chore: bump version to $VERSION [skip changelog]" || echo "No changes to commit"
          git push --set-upstream origin prepare-next-release --force

      - name: Merge release PR if exists
        env:
          GH_TOKEN: ${{ secrets.GIT_CLIFF_RELEASE_WORKFLOW_SECRET }}
        run: |
          PR_NUMBER=$(gh pr list --state open --head prepare-next-release --json number -q '.[0].number')
          if [ -n "$PR_NUMBER" ]; then
            gh pr merge "$PR_NUMBER" --merge --admin --delete-branch --subject "Release ${{ steps.prepare-next-release-branch }}" --body "Automated merge for release ${{ steps.prepare-next-release-branch }}"
          else
            echo "No open release PR found to merge."
          fi
